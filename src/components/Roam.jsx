/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/models/roam/model.gltf --output ./src/components/Model.js 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { Physics, useBox } from '@react-three/cannon'

export function Roam(props) {
  const { nodes, materials } = useGLTF('./models/roam/model.gltf')

  const [ref] = useBox(() => ({
    mass: 0, // Static object (immovable)
    position: [0.079, 2.072, -10.074], // Same as the position of the mesh
    args: [20, 1, 20] // Adjust the size to match the mesh geometry
  }))
  
  return (
    <Physics>
      <group {...props} dispose={null}>
        <mesh geometry={nodes.bakery.geometry} material={materials.base_material} position={[0, 3.29, -17.504]} rotation={[Math.PI / 2, 0, Math.PI / 2]} scale={15} />
        <mesh geometry={nodes.footing_02.geometry} material={materials['Material.037']} position={[0.068, 0.165, -0.085]} scale={4.923} />
        <mesh ref={ref} geometry={nodes.mesh.geometry} material={materials['base_material.001']} position={[0.079, 2.072, -10.074]} rotation={[Math.PI / 2, 0, 0]} scale={20} />
      </group>
    </Physics>
  )
}

useGLTF.preload('./models/roam/model.gltf')
